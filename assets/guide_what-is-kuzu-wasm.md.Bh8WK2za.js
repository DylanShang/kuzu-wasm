import{_ as a,c as r,a1 as s,o as t}from"./chunks/framework.Cs4jecZi.js";const i="/kuzu-wasm/assets/arch.Q0lGcwJS.png",d=JSON.parse('{"title":"What is Kùzu Wasm?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/what-is-kuzu-wasm.md","filePath":"guide/what-is-kuzu-wasm.md"}'),o={name:"guide/what-is-kuzu-wasm.md"};function n(u,e,l,h,m,p){return t(),r("div",null,e[0]||(e[0]=[s('<h1 id="what-is-kuzu-wasm" tabindex="-1">What is Kùzu Wasm? <a class="header-anchor" href="#what-is-kuzu-wasm" aria-label="Permalink to &quot;What is Kùzu Wasm?&quot;">​</a></h1><p>Kùzu Wasm is the WebAssembly version of the <a href="https://github.com/kuzudb/kuzu" target="_blank" rel="noreferrer">Kùzu</a> database system, designed to provide high-performance, in-browser serverless graph analysis.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>By compiling Kuzu to WebAssembly, Kuzu-WASM enables asynchronous execution of Cypher queries within web workers, ensuring impressive query performance and scalability. With the integration of Apache Arrow for lossless data copying, Kuzu-WASM ensures data integrity and efficiency. Additionally, it includes a virtual file system for seamless file imports. <img src="'+i+'" alt="An image"></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p>Power by Kùzu WASM</p><ul><li><a href="https://kuzu-shell.netlify.app/" target="_blank" rel="noreferrer">Kuzu-Shell</a></li><li><a href="https://kuzu-lab.netlify.app/" target="_blank" rel="noreferrer">Kuzu-Lab</a></li></ul><h2 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">​</a></h2><p>Kuzu-WASM is benchmarked against existing web data processing libraries using the LDBC, demonstrating superior performance across various workloads.</p>',9)]))}const f=a(o,[["render",n]]);export{d as __pageData,f as default};
